[user]
	name = Timo Sand
  email = "(none)"
[github]
	user = deiga
[core]
	excludesfile = /Users/timosand/.gitignore
	editor = vim
	whitespace = trailing-space,space-before-tab
        autocrfl = false
        safecrlf = warn
[color]
	status = true
	diff = true
	branch = true
        ui = true
        grep = true
        showbranch = true
[merge]
        conflictstyle = diff3
	stat = true
        tool = vimdiff
[apply]
	whitespace = nowarn
[alias]
		init = init --template=/Users/timosand/.git_template
    # checkout
    co = checkout                     # checkout
    nb = checkout -b                  # create and switch to a new branch (mnemonic: "git new branch branchname...")

    # commit
    c = commit -m                     # commit with message
    ca = commit -am                   # commit all with message
    ci = commit                       # commit
    cm = commit --amend
    amend = commit --amend            # ammend your last commit
    ammend = commit --amend           # ammend your last commit

    st = status

    # branch
    b = branch -v                     # branch (verbose)

    # diff
    d = diff                          # diff unstaged changes
    dc = diff --cached                # diff staged changes
    last = diff HEAD^                 # diff last committed change

    type = cat-file -t
    dump = cat-file -p

    cl = clone --recursive

    unstage = reset HEAD --

    disc = checkout --
    discard = checkout --

    # history
    wc = whatchanged -p --abbrev-commit --pretty=medium
    lg = log --color --graph \n  --pretty=format:'%Cred%h%Creset \n  -%C(yellow)%d%Creset %s %Cgreen(%cr) \n  %C(bold blue)<%an>%Creset' \n  --abbrev-commit
    hist = log --pretty=format:\"%h %ad | %s%d [%an] \" --graph --date=short
    report = "log --author=Timo --since='2 sunday ago' --until='1 sunday ago' --format='%Cgreen%ci%Creset %s%Creset' --no-merges"

    ctags = !.git/hooks/ctags
    serve = daemon --verbose --export-all --base-path=.git --reuseaddr --strict-paths .git/
    today = log --since=midnight --author=\"$(git config user.name)\" --oneline
    split-subpath = filter-branch --prune-empty --subdirectory-filter

    pr = pull-request
    ignore = "!gi() { curl -L -s https://www.gitignore.io/api/$@ ;}; gi"
    i = ignore

    update-submodule = submodule foreach git pull origin master
    us = update-submodule
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /opt/homebrew-cask/Caskroom/sourcetree/2.0.5.2/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[push]
	default = simple
[fetch]
	recurseSubmodules = true
[credential]
	helper = osxkeychain
[diff]
	renames = copies
	mnemonicprefix = true
	tool = vimdiff
[branch]
	autosetupmerge = true
[rerere]
	enabled = true
[merge "railsschema"]
        name = newer Rails schema version
        driver = "ruby -e '\n\
                  system %(git), %(merge-file), %(--marker-size=%L), %(%A), %(%O), %(%B)\n\
                  b = File.read(%(%A))\n\
                  b.sub!(/^<+ .*\\nActiveRecord::Schema\\.define.:version => (\\d+). do\\n=+\\nActiveRecord::Schema\\.define.:version => (\\d+). do\\n>+ .*/) do\n\
                    %(ActiveRecord::Schema.define(:version => #{[$1, $2].max}) do)\n\
                  end\n\
                  File.open(%(%A), %(w)) {|f| f.write(b)}\n\
                  exit 1 if b.include?(%(<)*%L)'"
[gh]
	protocol = https
[web]
	browser = open
[gitflow "branch"]
        master = master
        develop = develop
[gitflow "prefix"]
        feature = feature/
        release = release/
        hotfix = hotfix/
        support = support/
        versiontag = 
[git-up "bundler"]
	check = true
[gitflow "hotfix.finish"]
	push = True
	fetch = True
[gitflow "hotfix.start"]
	fetch = True
[gitflow "release.finish"]
	fetch = True
	push = True
[gitflow "release.start"]
	fetch = True
[gitflow "init"]
	defaults = True
[hub]
	protocol = https
[pull]
	rebase = true
[rebase]
	autoStash = true
